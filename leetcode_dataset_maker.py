# -*- coding: utf-8 -*-
"""leetcode_dataset_maker.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P8p59vePYtjoBQS82cy7UTVQ--uFcqc2
"""

import requests
import base64

repo_owner = "doocs"
repo_name = "leetcode"
readme_path = "README_EN.md"

api_url = f"https://api.github.com/repos/{repo_owner}/{repo_name}/contents/solution/{readme_path}"
response = requests.get(api_url)

if response.status_code == 200:
    readme_content = response.json()["content"]
    decoded_content = base64.b64decode(readme_content).decode("utf-8")
    #print(decoded_content)
else:
    print("Failed to retrieve README file")
lines = decoded_content.split("\n")
formatted_lines = []
for line in lines:
  formatted_lines.append(line)
print(formatted_lines)
with open("leetcode.txt", "w") as f:
        f.writelines(formatted_lines)

import re
solution=[]
descriptions=[]
def extract_info_from_file(question_number, file_path):
 with open(file_path, 'r') as f:
   for line in f:
    if len(line)>70:
      if(line[3:7]==question_number):
        return line
 return None
file_path='/content/leetcode.txt'
i=1
while i<3200:
  if i>=1000:
    question_number=f"{i}"
  elif i<10:
    question_number=f"000{i}"
  elif i>=10 and i<100:
    question_number=f"00{i}"
  elif i>=100 and i<1000:
    question_number=f"0{i}"

  line=extract_info_from_file(question_number,file_path)
  print(line)
  # Split the line into columns
  columns = line.strip().split("|")
  #print(columns)

  # Extract the question title
  question_title = columns[2].strip().split("]")[0].replace("[", "").replace("]", "")

  #Extract the solution link
  solution_link = columns[2].strip().split("]")[1].split("(")[1].split(")")[0]

  # Extract the topics
  topics = columns[3].strip().replace("`", "").split(",")

  # Extract the hardness
  hardness = columns[4].strip()

  # Store the extracted information in separate strings
  question_title_str = question_title
  solution_link_str = solution_link
  topics_str = ", ".join(topics)
  hardness_str = hardness

  print("Question Title:", question_title_str)
  print("Solution Link:", solution_link_str)
  print("Topics:", topics_str)
  print("Hardness:", hardness_str)

  link_contents=solution_link_str.strip().split("/")
  range = link_contents[2]
  location= link_contents[3]
  repo_owner = "doocs"
  repo_name = "leetcode"
  lang="cpp"
  url1 = f"https://raw.githubusercontent.com/{repo_owner}/{repo_name}/main/solution/{range}/{location}/README_EN.md"
  response = requests.get(url1)
  #print(response.text)
  content = response.text
  description = re.search(r'## Description(.*?)##', content, re.DOTALL).group(1).strip()
  description = re.sub(r'<!-- description:start -->\n\n', '', description)
  description = re.sub(r'\n\n<!-- description:end -->', '', description)
  description = re.sub(r'<p>', '', description)
  description = re.sub(r'</p>', '', description)
  description = re.sub(r'<strong class="example">', '', description)
  description = re.sub(r'</strong>', '', description)
  description = re.sub(r'<code>', '', description)
  description = re.sub(r'</code>', '', description)
  description = re.sub(r'<li>', '\n- ', description)
  description = re.sub(r'<ul>', '', description)
  description = re.sub(r'</ul>', '', description)

  description = re.sub(r'<strong>', '', description)
  description = re.sub(r'</strong>', '', description)
  description = re.sub(r'&quot;', '"', description)
  description = re.sub(r'&#39;', "'", description)
  description = re.sub(r'<sup>', '^', description)
  description = re.sub(r'</sup>', '', description)
  description = re.sub(r'<li>', '- ', description)
  description = re.sub(r'</li>', '', description)
  description=description.strip()
  description = re.sub(r'  ', ' ', description)
  print("Description:\n", description)
  descriptions.append(description)
  url = f"https://raw.githubusercontent.com/{repo_owner}/{repo_name}/main/solution/{range}/{location}/Solution.{lang}"
  response = requests.get(url)
  print(response.text)
  solution.append(response.text)
  i=i+1